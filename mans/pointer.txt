Операторы, используемые
с указателями
С указателями используются два оператора: "*" и "&". Оператор "&" — унар-
ный. Он возвращает адрес памяти, по которому расположен его операнд. (Вспом-
ните: унарному оператору требуется только один операнд.) Например, при вы-
полнении следующего фрагмента кода
ptr = &total;
в переменную p t r помещается адрес переменной t o t a l . Этот адрес соответству-
ет области во внутренней памяти компьютера, которая принадлежит переменной
t o t a l . Выполнение этой инструкции никак не повлияло на значение переменной
t o t a l . Назначение оператора "&" можно "перевести" на русский язык как "адрес
переменной", перед которой он стоит. Следовательно, приведенную выше инструк-
цию присваивания можно выразить так: "переменная p t r получает адрес пере-
менной t o t a l " . Чтобы лучше понять суть этого присваивания, предположим, что
переменная t o t a l расположена в области памяти с адресом 100. Следовательно,
после выполнения этой инструкции переменная p t r получит значение 100.
Второй оператор работы с указателями (*) служит дополнением к первому
(&). Это также унарный оператор, но он обращается к значению переменной, рас-
положенной по адресу, заданному его операндом. Другими словами, он ссылается
на значение переменной, адресуемой заданным указателем. Если (продолжая ра-
боту с предыдущей инструкцией присваивания) переменная p t r содержит адрес
переменной t o t a l , то при выполнении инструкции
val = * p t r ;
переменной v a l будет присвоено значение переменной t o t a l , на которую ука-
зывает переменная p t r . Например, если переменная t o t a l содержит значение
3200, после выполнения последней инструкции переменная v a l будет содержать
значение 3200, поскольку это как раз то значение, которое хранится по адресу
100. Назначение оператора "*" можно выразить словосочетанием "по адресу".
В данном случае предыдущую инструкцию можно прочитать так: "переменная
v a l получает значение (расположенное) по адресу p t r " .
